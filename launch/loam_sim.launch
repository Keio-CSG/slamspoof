<launch>
    <!-- パラメータ設定セクション nodeとは独立させて書く-->
    <!-- parameters for spoofing simulation node-->
    <param name="subscribe_topic_name" value="/velodyne_points"/>
    <param name="subscribe_odometry_name" value="/aft_mapped_to_init"/>
    <param name="number_of_iterations" value="1"/>
    <param name="sample_rate" value="0.25"/>
    <param name="noise_variance" value="0.1"/>
    <param name="min_distance" value="1.5"/>
    <param name="max_distance" value="30"/>
    <param name="max_height" value="-0.8"/>
    <param name="spoofed_frame_name" value="odom"/>
    <param name="spoofing_mode" value="removal"/>
    <param name="injection_distance" value="30.0" />

    <param name="attackablity_save_dir" value="/home/rokuto/cbulid_ws/src/spoofing_sim/Attackablity_e2e_test/"/>
    <param name="trajectory_save_dir" value="/home/rokuto/cbulid_ws/src/spoofing_sim/Trajectory_e2e_test/"/>

    <!-- spoofer params -->
    <arg name="x" default="50" />
    <arg name="y" default="-5" />

    <param name="spoofing_max_distance" value="30.0"/>
    <param name="spoofer_location_x" value="$(arg x)"/>
    <param name="spoofer_location_y" value="$(arg y)"/>
    <param name="min_spoofing_angle" value="15" />
     <param name="max_spoofing_angle" value="165" />

    <!-- lidar params -->
    <param name="lidar_horizontal_resolution" value="0.15"/>
    <param name="lidar_vertical_lines" value="40"/>
    <param name="spofing_success_rate" value="0.05"/>

    <node name="node1" pkg="spoofing_sim" type="node2.py" output="screen" required="true"/>
    <node name="node2" pkg="spoofing_sim" type="odom_node.py" output="screen" required="true"/>

    <!-- SLAM settings -->
    <param name="scan_line" type="int" value="16" />

    <!-- if 1, do mapping 10 Hz, if 2, do mapping 5 Hz. Suggest to use 1, it will adjust frequence automaticlly -->
    <param name="mapping_skip_frame" type="int" value="1" />

    <!-- remove too closed points -->
    <param name="minimum_range" type="double" value="0.3"/>

    <!-- setting lidar topic -->
    <remap from="/velodyne_points" to="/cloud_spoofed"/>

    <param name="mapping_line_resolution" type="double" value="0.1"/>
    <param name="mapping_plane_resolution" type="double" value="0.2"/>
    <node pkg="aloam_velodyne" type="ascanRegistration" name="ascanRegistration" output="screen" />
    <node pkg="aloam_velodyne" type="alaserOdometry" name="alaserOdometry" output="screen" />
    <node pkg="aloam_velodyne" type="alaserMapping" name="alaserMapping" output="screen" />

    <arg name="rviz" default="true" />
    <group if="$(arg rviz)">
        <node launch-prefix="nice" pkg="rviz" type="rviz" name="rviz" args="-d $(find aloam_velodyne)/rviz_cfg/aloam_velodyne.rviz" />
    </group>

</launch>