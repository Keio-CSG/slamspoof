<launch>

    <!-- parameters for spoofing simulation node-->
    <param name="subscribe_topic_name" value="/velodyne_points"/> <!-- raw pointcloud topic -->
    <param name="subscribe_odometry_name" value="/kiss/odometry"/> 
    <param name="number_of_iterations" value="1"/>
    <param name="sample_rate" value="0.25"/>
    <param name="noise_variance" value="0.1"/>
    <param name="min_distance" value="2.5"/>
    <param name="max_distance" value="50"/>
    <param name="max_height" value="-1.5"/>
    <param name="spoofed_frame_name" value="odom"/>
    <param name="spoofing_mode" value="removal"/> <!-- spoofing type (removal or injection) -->
    <param name="injection_distance" value="30.0" /> <!-- injected wall distance (from LiDAR, injection only) -->
    <param name="reference_trajectory_file" value="$(find slamspoof)/benign_traj/vlp32c_benign_0926.csv" /> <!-- reference trajectory -->
    <param name="smvs_save_dir" value="$(find slamspoof)/SMVS/"/>
    <param name="vulnerablity_save_dir" value="$(find slamspoof)/Vulnerablity/"/>
    <param name="trajectory_save_dir" value="$(find slamspoof)/Trajectory/"/>

    <!-- spoofer params -->
    <arg name="x" default="27.5" /> <!-- spoofer location (x) -->
    <arg name="y" default="10" />   <!-- spoofer location (y) -->

    <param name="spoofing_max_distance" value="30.0"/> <!-- spoofing range (benign:0.0) -->
    <param name="spoofer_location_x" value="$(arg x)"/>
    <param name="spoofer_location_y" value="$(arg y)"/>
    <param name="min_spoofing_angle" value="15" />
    <param name="max_spoofing_angle" value="165" />

    <!-- lidar params -->
    <param name="lidar_topic_length" value="22"/> <!-- velodyne:22 livox:18 (point_step) -->
    <param name="lidar_horizontal_resolution" value="0.15"/>
    <param name="lidar_vertical_lines" value="40"/>
    <param name="spoofing_success_rate" value="0.05"/>

    <node name="node1" pkg="slamspoof" type="SpoofingSimulation.py" output="screen" required="true"/>
    <node name="node2" pkg="slamspoof" type="odom_node.py" output="screen" required="true"/>

    <!-- parameters for kiss icp -->
    <!-- ROS paramaters -->
    <arg name="bagfile" default=""/> <!-- play rosbag name -->
    <arg name="visualize" default="true"/>
    <arg name="odom_frame" default="odom"/>
    <arg name="base_frame" default=""/>
    <arg name="topic" default="/cloud_spoofed"/> <!-- input pointcloud topic(spoofed) -->
    <arg name="publish_odom_tf" default="false"/>

    <!-- KISS-ICP paramaters -->
    <arg name="deskew" default="false"/>
    <arg name="max_range" default="100.0" />
    <arg name="min_range" default="0.0" />
    <arg name="voxel_size" default="" />

    <!-- Odometry node -->
    <node pkg="kiss_icp" type="odometry_node" name="odometry_node" output="screen" required="true">

        <!-- ROS params -->
        <remap from="pointcloud_topic" to="$(arg topic)"/>
        <param name="odom_frame" value="$(arg odom_frame)"/>
        <param name="base_frame" value="$(arg base_frame)"/>
        <param name="publish_odom_tf" value="$(arg publish_odom_tf)"/>
        <param name="visualize" value="$(arg visualize)"/>
        <!-- KISS-ICP params -->
        <param name="max_range" value="$(arg max_range)"/>
        <param name="min_range" value="$(arg min_range)"/>
        <param name="deskew" value="$(arg deskew)"/>
        <param name="voxel_size" value="$(arg voxel_size)"/>
        <param name="max_points_per_voxel" value="20"/>
        <param name="initial_threshold" value="2.0"/>
        <param name="min_motion_th" value="0.1" />
    </node>

    <!-- Rosbag player, if bagfile argument was specified -->
    <group if="$(eval bagfile != '')">
        <node pkg="rosbag" type="play" name="player2" args="$(arg bagfile)" output="screen"/>
    </group>

    <!-- Visualizer -->
    <group if="$(arg visualize)">
        <node pkg="rviz" type="rviz" name="rviz2" args="-d $(find kiss_icp)/rviz/kiss_icp_ros1.rviz"/>
    </group>
</launch>